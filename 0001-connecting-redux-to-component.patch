From 684ff1a0d4d91dfd62cc72881727750346aa419f Mon Sep 17 00:00:00 2001
From: kunjan <kunjan@kshetri.com>
Date: Thu, 9 Mar 2017 06:49:20 -0500
Subject: [PATCH 1/1] connecting redux to component

---
 ui/governance/src/account/users/AccountUserGrid.js | 33 ++++++++++++++++++++--
 ui/governance/src/actions/AccountUsersActions.js   |  4 +--
 ui/governance/src/app/index.js                     |  8 ++++--
 .../src/components/AccountUsersConstants.js        | 11 +-------
 ui/governance/src/services/AccountUsersService.js  |  7 ++---
 5 files changed, 42 insertions(+), 21 deletions(-)

diff --git a/ui/governance/src/account/users/AccountUserGrid.js b/ui/governance/src/account/users/AccountUserGrid.js
index 5010d98..aec4075 100644
--- a/ui/governance/src/account/users/AccountUserGrid.js
+++ b/ui/governance/src/account/users/AccountUserGrid.js
@@ -9,6 +9,9 @@ import QbRow from '../../../../client-react/src/components/dataTable/qbGrid/qbRo
 import QbCell from '../../../../client-react/src/components/dataTable/qbGrid/qbCell';
 import '../../../../client-react/src/components/dataTable/qbGrid/qbGrid.scss';
 
+import {connect} from 'react-redux';
+import * as AccountUsersActions from '../../actions/AccountUsersActions';
+
 const DeactivatedFlag = 0x00000040;
 const DeniedFlag = 0x0008;
 const CanCreateAppFlag = 0x0004;
@@ -233,7 +236,19 @@ const columns = [
     },
 ];
 
-class AccountUsersGrid extends Component {
+export class AccountUsersGrid extends Component {
+
+    constructor(props) {
+        super(props);
+    }
+
+    /**
+     * get users whenever the component mounts
+     */
+    componentDidMount() {
+        this.props.getUsers();
+    }
+
     render() {
         return (
             <Table.Provider
@@ -266,4 +281,18 @@ class AccountUsersGrid extends Component {
     }
 }
 
-export default AccountUsersGrid;
+
+const mapStateToProps = (state) => {
+
+    console.log(state);
+    return {
+        users: state.AccountUsers.users
+    };
+};
+
+
+export default connect(
+    mapStateToProps,
+    AccountUsersActions
+)(AccountUsersGrid);
+
diff --git a/ui/governance/src/actions/AccountUsersActions.js b/ui/governance/src/actions/AccountUsersActions.js
index 63cd09c..32e7cdc 100644
--- a/ui/governance/src/actions/AccountUsersActions.js
+++ b/ui/governance/src/actions/AccountUsersActions.js
@@ -3,8 +3,8 @@
 import AccountUsersService from '../services/AccountUsersService';
 import Promise from 'bluebird';
 import * as types from '../actions/types';
-import Logger from '../utils/logger';
-import LogLevel from '../utils/logLevels';
+import Logger from '../../../client-react/src/utils/logger';
+import LogLevel from '../../../client-react/src/utils/logLevels';
 
 const logger = new Logger();
 
diff --git a/ui/governance/src/app/index.js b/ui/governance/src/app/index.js
index 24dcb2d..fe74cd3 100644
--- a/ui/governance/src/app/index.js
+++ b/ui/governance/src/app/index.js
@@ -6,13 +6,15 @@ import {GOVERNANCE_USERS_ROUTE} from './routes';
 import AccountUsers from '../account/users/AccountUsers';
 
 import { Provider } from 'react-redux';
-import { createStore, applyMiddleware } from 'redux';
-import reducers from '../reducers';
 
-const createStoreWithMiddleware = applyMiddleware()(createStore);
+import createAppStore from '../../../client-react/src/scripts/store.js';
+
+const store = createAppStore();
 
 render((
+    <Provider store={store}>
     <Router history={browserHistory}>
         <Route path={GOVERNANCE_USERS_ROUTE} component={AccountUsers} />
     </Router>
+    </Provider>
 ), document.getElementById('content'));
diff --git a/ui/governance/src/components/AccountUsersConstants.js b/ui/governance/src/components/AccountUsersConstants.js
index 5869fee..cb7c86f 100644
--- a/ui/governance/src/components/AccountUsersConstants.js
+++ b/ui/governance/src/components/AccountUsersConstants.js
@@ -1,12 +1,3 @@
-// property keys for JSON data for feature switches and overrides
+// property keys for JSON data
 
 export const ACCOUNTUSERS_ID_KEY = 'id';
-// export const FEATURE_NAME_KEY = 'name';
-// export const FEATURE_TEAM_KEY = 'teamName';
-// export const FEATURE_DEFAULT_ON_KEY = 'defaultOn';
-// export const FEATURE_DESCRIPTION_KEY = 'description';
-//
-// export const OVERRIDE_ID_KEY = 'id';
-// export const OVERRIDE_TYPE_KEY = 'entityType';
-// export const OVERRIDE_VALUE_KEY = 'entityValue';
-// export const OVERRIDE_ON_KEY = 'on';
diff --git a/ui/governance/src/services/AccountUsersService.js b/ui/governance/src/services/AccountUsersService.js
index 2bbc29c..404cf32 100644
--- a/ui/governance/src/services/AccountUsersService.js
+++ b/ui/governance/src/services/AccountUsersService.js
@@ -1,5 +1,4 @@
-import constants from './constants';
-import BaseService from './baseService';
+import BaseService from '../../../client-react/src/services/baseService';
 
 class AccountUsersService extends BaseService {
 
@@ -8,13 +7,13 @@ class AccountUsersService extends BaseService {
 
         //  Feature switch service API endpoints
         this.API = {
-            GET_Users               : `${constants.BASE_URL.QUICKBASE}/${constants.FEATURE_SWITCHES}`
+            GET_Users               : "https://jsonplaceholder.typicode.com/users"
         };
     }
 
     getUsers() {
         const params = {};
-        const url = super.constructUrl(this.API.GET_FEATURE_SWITCHES, []);
+        const url = super.constructUrl(this.API.GET_Users, []);
 
         return super.get(url, {params});
     }
-- 
2.5.4 (Apple Git-61)

