@import '../../../src/assets/css/qbVariables';
@import './fields';

/* CSS hacks to the 3rd part date time picker to meet visual spec */
.bootstrap-datetimepicker-widget.dropdown-menu {
    padding-top: 0;

    /* the button that switches between views */
    .picker-switch {
        color: $datepicker-select-button-color;
        background-color: $datepicker-background-color;
        border-radius: 0;

        &:hover {
            background-color: $datepicker-date-hover-background-color;
        }
    }

    /* the time picker view */
    .timepicker {
        background-color: $datepicker-background-color;

        .glyphicon {
            color: $datepicker-select-button-color;
        }
    }

    /* the table cells (day, year etc)   */
    button, .month, .day, .year, .minute, .timepicker-minute, .timepicker-hour {
        border: 0;
        border-radius: 0;

        &:hover {
            background-color: $datepicker-date-hover-background-color;
        }
    }

    .btn .glyphicon:hover {
        background: $datepicker-date-hover-background-color;
    }

    .btn-primary, .active {
        background-color: $datepicker-select-active-color;
        font-weight: bold;
    }

    //  show a circle for today's date
    .today {
        border-radius: 16px;
        background-color: $datepicker-today-background-color;
        color: $color-black-700;
        font-weight: normal;
    }

    //  hide the pickers default identification for today
    .today::before {
        content: inherit;
        border: none;
    }
}

/* the little arrow on the top top right of the popup */
.bootstrap-datetimepicker-widget.pull-right:after {
    border-bottom-color: $color-black-400;
}

.datepicker {
    .table-condensed {
        td, th {
            border-radius: 0;
            padding: 4px;
        }

        /* the title bar with prev/next/date etc */
        thead {
            font-size: 14px;
            background-color: $datepicker-background-color;

            tr:first-child {
                th.switch, th.prev, th.next {
                    .glyphicon {
                        font-size: 22px;
                    }
                }
            }

            tr:first-child th:hover {
                background-color: $datepicker-date-hover-background-color;
                color: $datepicker-select-button-color;
            }

            .glyphicon-chevron-left:before {
                font-family: $icon-font-ui-family;
                content: $codepoint-iconUISturdy-caret-filled-left;
            }

            /* need to flip the right chevron as we're using the left */
            .glyphicon-chevron-right {
                transform: rotate(180deg);
            }
            /* replace their prev/next bootstrap icons with ours */
            .glyphicon-chevron-right:before {
                font-family: $icon-font-ui-family;
                content: $codepoint-iconUISturdy-caret-filled-left; // this seems wrong... but it's right... you'll notice this DOM node is rotated 180 degrees.
            }

            tr {
                th.prev:hover {
                    background-color: transparent;
                }

                th.next:hover {
                    background-color: transparent;
                }
            }
        }

        tbody tr {
            background-color: $datepicker-background-color;
            line-height: 20px;

            th {
                border: 0;
                padding: 5px;
            }
        }
    }

    /* ugh, the year and month views use < and > characters not icons */

    .datepicker-years, .datepicker-months {

        /* hide the text node with the < and > characters by making them transparent */
        th.next, th.prev, th.next:hover, th.prev:hover {
            color: transparent !important;
        }

        /* insert our icons */
        th.next:after, th.prev:after {
            font-family: $icon-font-ui-family;
            content: $codepoint-iconUISturdy-caret-filled-left;
            font-size: 22px;
            color: $color-black-100;
        }

        th.next:hover:after, th.prev:hover:after {
            color: $datepicker-select-button-color;
        }

        th.next {
            padding-bottom: 0;
        }

        th.prev {
            /* flip the next icon around */
            transform: rotate(180deg);
        }
    }
}

/* hide datepicker if it's been opened but we're not over that cell */
.dateCell.cellEdit:not(:hover) .bootstrap-datetimepicker-widget {
    display: none !important;
}

//  edit styles for a time cell
.timeCell.cellEdit {
    display: inline-block;
    width: 100%;
    border: none;

    .Select {
        height: 32px;
        border: 0;
    }

    .Select-control {
        border-radius: 2px;
        height: 32px;
    }

    .Select-input {
        padding-left: 1px;
        height: 28px;
        color: $badcolor7-color25;
    }

    .Select-value {
        line-height: 28px;
    }

    .Select-placeholder {
        line-height: 28px;
        color: $color-black-700;
        padding: 0 1px;
        margin-left: 2px;
        font-style: normal !important;   // override SelectCommon setting
    }

    .Select-option {
        color: $badcolor7-color25;
        padding: 4px 0 4px 32px;

        .qbIcon {
            left: 0;
            padding: 2px 7px;
        }
    }

    .Select-arrow-zone {
        background-color: $datepicker-background-color;
        padding-right: 0;

        .glyphicon {
            color: $datepicker-select-button-color;
        }

        .glyphicon-time {
            color: $default-text-onlight-color;
            padding-top: 3px;
            padding-left: 5px;
        }
    }

    &.ghost-text {
        .Select-placeholder {
            color: $color-black-500;
            font-style: italic !important;
            font-weight: bold;
            padding: 1px;
            margin-left: 2px;
        }
    }
}

.disabledDatePicker {
    .input-group {
        cursor: default;
    }
    input, span {
        pointer-events: none;
    }
}

.disabledTimeField {
    .Select {
        cursor: default;
    }
    .Select-control {
        pointer-events: none;
    }
}

//  edit mode styles for a date cell
.dateCell.cellEdit {
    display: inline-block;
    vertical-align: middle;
    width: 100%;

    //  this positions the calendar
    position: relative;

    &.ghost-text {
        .input-group.date input.form-control {
            color: $color-black-500;
            font-style: italic;
            font-weight: bold;
        }
    }

    .glyphicon-calendar {
        color: $default-text-onlight-color;
    }

    .date.is-focused {
        border: solid 1px $input-text-focus-border-color;
        //Added border-color for multi choice text box
        border-color: $input-text-focus-border-color !important;
        border-radius: 2px;

        @include focus-shadow();
    }

    > * {
        border: 0;

        .input-group.date input.form-control {
            border: 0;
            padding: 3px;
            height: 28px;
            // remove browser focus style from the input
            outline: none;
            box-shadow: none;
        }

        .input-group.date .input-group-addon {
            background: $color-black-100;
            height: 20px;
            padding: 0;
            border: 0;
            color: $iconfont-on-light-normal-color;
        }

        .bootstrap-datetimepicker-widget {
            top: 34px !important;
            left: -2px !important; /* prevent overflow to the left */
        }
    }

    .datepicker .datepicker-days .day {
        padding-bottom: 4px;
    }
}

.dateTimeFieldValueEditor {
    display: flex;
    .editForm & .bootstrap-datetimepicker-widget {
        position: relative !important;
        top: 6px !important;
        &:after, &:before {
            // alight the pointer to the calendar icon when the date picker is a part of the
            // dateTimeField
            left: 121px;
            right: auto;
        }
    }
}

.dateCell, .timeCell {

    > input {
        width: 100%;
        height: 100%;
        padding: $padding-small-vertical;
    }

    &.cellEdit.nativeInput {
        border: 0;
        display: flex;

        > input {
            flex-grow: 1;
            border: 1px solid $input-text-normal-border-color;
        }
    }
}

.timeCell.error {
    .Select-control {
        @include error-border;
    }
}

.qbRow.editing {

    /* for all columns but the last, move the arrow datepicker towards the left side */
    > td:not(:last-child) {
        .dateFormat, .dateTimeFormat {
            .bootstrap-datetimepicker-widget {
                &.bottom::before {
                    left: 27px;
                    right: auto;
                }
                &.bottom::after {
                    left: 28px;
                    right: auto;
                }
            }
        }
    }

    /* for last column, allow overflow with left cells to prevent clipping on right */
    > td:last-child .dateCell.cellEdit {

        * > .bootstrap-datetimepicker-widget {
            right: -4px !important;
            left: auto !important;
        }
    }
}
