@import '../../../../src/assets/css/qbVariables';
$row-background-color-hover: $color-blue-200;
$row-cell-border-color: $color-black-300;
$row-bg-color: $color-black-100;
$row-non-editable-bg-color: $color-black-200;
$row-border-color: $color-black-300;
$row-box-shadow-color: $color-black-300;
$cell-edit-background-edit: $color-blue-200;
$grid-font-size: $font-size-p;
$grid-default-group-padding: 20px;
$grid-default-cell-padding: 4px;
$grid-group-expand-icon-size: 20px;
$cell-edit-background-edit: $color-blue-200;
$edit-icon-font-size: 18px;

.qbGrid > thead, .qbGrid > tbody {
    color: $default-text-onlight-color;
    -webkit-font-smoothing: antialiased;
    table-layout: fixed;

    > td {
        vertical-align: top;
    }
}

.qbGrid {
    //margin: 2px;

    .qbIcon {
        font-size: $grid-group-expand-icon-size;
        width: $grid-group-expand-icon-size;
    }

    .cellEditIcon {
        display: none;
        color: $ghost-text-color;
        font-size: $edit-icon-font-size;
        position: absolute;
        top: 0;
        right: 5px;

        &:hover {
            color: $default-hover-color;
        }
    }

    .qbCell:hover .cellEditIcon {
        display: inline;
    }

    .qbCell .editingCell .cellEditIcon {
        display: none;
    }

    .emptyRowActions {
        width: 75px;
    }

    .groupHeader {
        padding-left: $grid-default-group-padding + 3;
        vertical-align: top;
        font-weight: bold;
    }

    //assuming that we can have up to 6 group levels
    @for $i from 1 through 6 {
        .subHeaderLevel-#{$i} {
            .subHeaderCell {
                padding-left: $i * $grid-default-group-padding;
            }
        }
    }

    .dateCell, .durationCell, .phoneCell, .urlField {
        white-space: nowrap;
    }

    .AlignRight {
        text-align: right;
    }

    .AlignCenter {
        text-align: center;
    }

    .gridHeaderCell {
        display: flex;
        align-items: center;

        .gridHeaderLabel {
            flex-grow: 1;
            padding-right: 4px;
        }

        .headerMenu {
            flex-grow: 0;

            button {
                padding: 0;
                margin: 0;
                border: 0;
                background: inherit;
                width: $grid-group-expand-icon-size;
                height: $grid-group-expand-icon-size;
                opacity: 0.2;
            }
        }

        &:hover .headerMenu .dropdownToggle {
            opacity: 1;
        }
    }

    .cellWrapper {
        width: 100%;
        //this adjusts the height for rendered rows
        margin-bottom: -8px;
        //this adjusts the height for rendered rows
        padding-top: 6px;
        //Turns out it works better without a min width
        //Min width of 200px sets the rendered rows to 200 px minimum
        //min-width: 200px;
        //min-height: 32px;
        position: relative;

        &.numberFormat,
        &.currencyFormat,
        &.percentFormat,
        &.durationFormat.wUnitsText {
            text-align: right;
        }

        &.checkboxFormat {
            text-align: center;
        }

        &.dateFormat, &.timeFormat {
            min-width: 120px;
        }

        &.dateTimeFormat {
            min-width: 210px;
        }
    }

    .editTools {
        z-index: 1;
        display: flex;
        flex-direction: column;
        flex: 0 0 auto;
        background-color: $qbgrid-cell-edit-background-color;
        box-shadow: -6px 0px 14px $qbgrid-row-box-shadow-color;
        position: absolute;
        top: -47px;
        left: -79px;
        padding: 0 24px;
        border: 1px solid $qbgrid-row-border-color;

        .loadedContent {
            padding: 0;
        }

        .loader {
            padding: 10px 9px;

            .spinner {
                // Need important because the original styles are set directly on the element by react-loader
                left: auto !important;
                top: auto !important;
            }
        }

        button {
            flex: 0 0 auto;
            border: 0;
            background-color: $qbgrid-cell-edit-background-color;
            margin-right: 2px;
            padding: 6px 4px;

            .qbIcon:hover {
                opacity: 1;
            }

            .qbIcon {
                opacity: 0.7;
                width: 20px;
                font-size: 16px;
                vertical-align: top;
            }

            .qbIcon.saveRecord {
                color: $color-green-700;
                font-size: 18px;
            }

            .qbIcon.invalidRecord {
                color: $tootip-error-color;
                font-size: 18px;
                cursor: default;
            }

            .qbIcon.cancelSelection {
                color: $iconfont-on-light-normal-color;
            }

            .qbIcon.deleteRecord {
                color: $color-red-700;
            }

            .qbIcon.addRecord {
                color: $iconfont-on-light-normal-color;
            }

            .qbIcon.disabled.addRecord {
                color: $iconfont-on-light-disabled-color;
            }
        }
    }

    .urlField .btn {
        margin-top: -5px;
        padding: 1px 10px;
    }

}

.qbGrid > thead > tr > th {
    min-width: 80px;
    white-space: nowrap;
    border-right: 1px solid $color-blue-400;
    border-bottom: 2px solid $badcolor1-color6;
    padding: $grid-default-cell-padding;
    color: $color-blue-600;
    -webkit-font-smoothing: antialiased;
    border-color: $color-blue-400;
    background-color: $color-blue-300;
}

.qbGrid .actionsCol {
    white-space: nowrap;

    > * {
        display: inline-block;
    }

    input[type=checkbox] {
        margin-right: 12px;
    }

    .iconActionButton {
        width: auto;
        margin-right: 4px;
        height: 30px;
    }

    .qbIcon {
        font-size: 20px;
        width: 20px;
    }
}

.qbGrid > tbody > tr > td {
    //Added padding-left and padding-right to match the AGGrid view layout
    height: $form-view-box-height;
    padding-left: 6px;
    padding-right: 6px;
    vertical-align: top;
    font-size: $grid-font-size;
    border-right: 1px solid $color-black-300;
    border-bottom: 1px solid $color-black-300;
    //This is commented out because the texts below an inline edit was overlapping, this pushes it down a little bit
    //no more overlap
    //vertical-align: top;
}

.qbGrid > tbody > tr > td:first-of-type {
    left: 0;
    width: 80px;
    max-width: 80px;
    position: relative;
    background: $color-black-100;
    vertical-align: top;
}

.qbGrid .editing {
    box-shadow: 0 0 0 0 $qbgrid-cell-edit-background-color, 0 0 0 0 $qbgrid-cell-edit-background-color, 0 0 20px 10px rgba($border-shadow-base-color, 0.5);
    margin-top: -15px;
    z-index: 999;
    background-color: $qbgrid-cell-edit-background-color;
    border-top: $cell-edit-background-edit;

    > td:first-child {
        padding-left: 4px;
        border-left: 1px solid $qbgrid-row-border-color;
    }

    > td {
        //This adds border back to the bottom of inline edit
        //border: none;
        border-top: 2px solid $cell-edit-background-edit;
        overflow: visible;
        margin: 0;
        //vertical-align: middle;
        border-right: 1px solid #dcdcdc;
        //Commented out because in-line edit row is too big, this makes the height smaller
        //padding-bottom: 14px;

        .cellWrapper {
            display: flex;
            //Commented out to make the rows smaller in height
            //padding: 2px;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 1;

            textarea.cellEdit {

                overflow: hidden;
                box-sizing: border-box;
            }

            &.editingCell {
                display: inline-block;
                //border: none;
                //This aligns input boxes to the top for inline edit and it adds padding to the bottom
                padding-bottom: 20px;
                margin-top: -6px;

                .nonEditable {
                    margin: 1px;
                    cursor: not-allowed;
                }

                &.dateTimeField > * {
                    border: 0;

                    .input-group.date input.form-control {
                        border: 0;
                        padding: 0;
                        font-size: 12px;
                        height: 25px;
                        border-radius: 0;
                    }

                    .input-group.date .input-group-addon {
                        background: $color-black-100;
                        height: 21px;
                        padding: 0;
                        border: 0;
                        color: $iconfont-on-light-normal-color;
                    }
                }

                &.input-group {
                    flex: 1 1 auto;
                    display: flex;
                    flex-direction: row;
                    margin-right: 0;
                    padding-right: 0;
                    border-right: 0;

                    > input {
                        flex: 1 1 auto;
                        border-radius: 0;
                        border: 0;
                        height: 21px;
                        margin-right: 1px;
                        font-size: $grid-font-size;
                        padding-left: 2px;
                    }

                    > span.dropdown {
                        flex: 0 0 auto;
                        width: 20px;

                        button {
                            padding-left: 4px;
                            padding-top: 0;
                            height: 21px;
                            width: 20px;
                            border-radius: 0;
                        }
                    }
                }
            }
        }
    }
}

.actionsCol .iconActions {
    line-height: inherit;

    .dropdown-menu a {
        padding-left: 4px;

        .qbIcon {
            margin-right: 6px;
            vertical-align: middle;
            width: 28px;
            padding: 4px;
        }

        &:hover {
            .qbIcon {
                color: $color-black-100;
            }

            .qbIcon.print {
                background-color: $print-icon-normal-color;
            }

            .qbIcon.email {
                background-color: $mail-icon-normal-color;
            }

            .qbIcon.duplicate {
                background-color: $copy-icon-normal-color;
            }

            .qbIcon.delete {
                background-color: $delete-icon-normal-color;
            }
        }
    }

    .iconActionButton {
        opacity: 0.2;
        transition: opacity 200ms ease-in-out;
        height: 30px;
        width: auto;
        background: inherit;

        &:hover {
            color: $topnav-icon-color;
        }
    }

    .qbIcon.print {
        color: $print-icon-normal-color;
    }

    .qbIcon.email {
        color: $mail-icon-normal-color;
    }

    .qbIcon.duplicate {
        color: $copy-icon-normal-color;
    }

    .qbIcon.delete {
        color: $delete-icon-normal-color;
    }
}

.actionsCol:hover .iconActions .iconActionButton {
    transition: opacity 200ms ease-in-out;
    opacity: 1;
}

.multiLineTextCell {
    border: 0;
    //margin: 0;
    height: 32px;
    //margin-bottom: -90px;
    font-family: $font-family;
    font-size: $grid-font-size;
    border-radius: 0;
    color: $font-color;
}
//The style here is for sticky column
.qbGrid > tbody > tr > td:first-of-type {
    height: 32px;
    background: $row-bg-color;
    z-index: 1000;
    outline: $row-cell-border-color;
}

.qbHeaderCell.stickyCell {
    position: relative;
    z-index: 1;
}

//Makes row edit action menu pop over the table instead of over stickyColumn
.dropdown-menu {
    top: 0;
    left: 27px;
}