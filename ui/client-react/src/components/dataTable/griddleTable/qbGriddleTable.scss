@import '../../../../src/assets/css/qbVariables';

$header-cell-border: $color5;
$header-cell-border-bottom: $color6;
$header-cell-background-color: $color7;
$header-cell-color: $color8;

$row-background-color-hover: $color1;
$row-cell-border-color: $color4;

$footer-background: $color2;
$footer-next-button-hover: $color10;
$footer-next-button: $color2;

.QBGriddle {
    font-family: $font-family;
    color: $font-color;
    font-size: $font-size;
    -webkit-font-smoothing: antialiased;

    table {
        table-layout: auto; /* by default griddle sets this to "fixed" layout but we dont want same width columns*/
        font-size: 12px;
    }

    .griddle-container { /* Temporary margin so the footer doesnt overlap the grid. Should be resolved by the layout in time. */
        margin-bottom: 70px;
        border: 0px;
    }

    tr:hover td {
        &:not(.footer-container) {
            background-color: $row-background-color-hover;
        }
    }
    tr {
        th {
            padding: 5px 8px 2px 8px;
            color: $header-cell-color;
            font-size: 12px;
            -webkit-font-smoothing: antialiased;
            border-color: $header-cell-border;
            border-right: 1px solid $header-cell-border;
            border-bottom: 2px solid $header-cell-border-bottom;
            background-color: $header-cell-background-color;
            &:last-of-type {
                border-right: 0px;
            }
        }
        td {
            word-wrap: break-word;
            padding: 5px 8px;
            border: 1px solid $row-cell-border-color;
            height: 32px; /* this doesnt seem right - pass through props if possible*/
            &:nth-child(1) {
                border-left: 0px;
            }
            &:last-of-type {
                border-right: 0px;
            }
        }
    }
    td:nth-last-child(2) {
        border-right: 0;
    }
    td.Bold {
        font-weight: bold;
    }
    .NoWrap {
        white-space: nowrap;
    }
    td.AlignRight, th.AlignRight {
        text-align: right;
    }

    .footer-container {
        background-color: $footer-background;
        .griddle-footer {
            .pager {
                margin-right: 2px;
            }
            .next {
                a {
                    padding: 5px 15px;
                    line-height: 1.42857;
                    text-decoration: none;
                    color: #365EBF;
                    border-style: solid;
                    border-width: 1px;
                    border-color: $row-cell-border-color;
                    background-color: $footer-next-button;
                    font-size: 14px;
                    margin: 0;
                    border-radius: 2px;
                    &:hover {
                        color: $footer-next-button-hover;
                    }
                }
            }
        }
    }
}

.tableActionsContainer {
    position: relative;
    height: 50px;
    > div {
        position: absolute;
    }
}

/* table actions transitions */
.tableActions-enter {
    top: -100%;
    opacity: 0.01;
}

.tableActions-enter.tableActions-enter-active {
    top: 0;
    opacity: 1;
    transition: all 300ms ease-in-out;
}

.tableActions-leave {
    left: 0;
    opacity: 1;
}

.tableActions-leave.tableActions-leave-active {
    left: 100%;
    opacity: 0.01;
    transition: all 300ms ease-in-out;
}

.swipeable {
    position: relative;
}

.rowActions {
    height: 100%;
    top: 0;
    right: 0;
    overflow-x: hidden;

    white-space: nowrap;
    position: absolute;

    .recordActions {
        padding: 0;
        height:100%;
        width:240px;

        .actionIcons {
            display:flex;
            flex-direction:row;
            width:100%;
            height:100%;

            .iconLink {
                flex:1 1 auto;
                height:100%;
                position:relative;
                .qbIcon {
                    position:absolute;
                    top: calc(50% - 8px);
                    left: calc(50% - 8px);
                }
            }
        }
    }
    &.closed {
        transition: width 100ms ease-in;
        width: 0;
    }
    &.open {
        transition: width 100ms ease-in;
        width: 240px;
    }
}

/* row actions on griddle trickery */

/* hide actions column header */
.QBGriddle tr th.actions {
    display: none;
}

/* hide griddle cell containing actions */
.QBGriddle tr td.actions {
    position: relative;
    width: 0;
    border: 0;
    margin: 0;
    padding: 0;

    /* actions */
    > div {
        margin: 0;
        visibility: hidden;
        position: absolute;
        display: flex;
        flex-direction: row;
        //align-items: center;
        top: 0;
        right: 0;
        height: 100%;
        background-color: $row-background-color-hover;
        white-space: nowrap;
        border-top: 1px dotted #dcdcdc;
        //border-right: 1px dotted #969696;
    }
}

.QBGriddle tr:hover td.actions > div {
    visibility: visible;

}

.selectedRows .QBGriddle tr:hover td.actions > div {
    visibility: hidden;
}

