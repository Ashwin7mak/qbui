@import "../../../../reuse/client/src/assets/css/qbVariables";

.formBuilderContainer {
    height: 100%;

    .listOfElementsContainer {
        height: calc(100% - #{$trowser-footer-height + 59px});
        @include medium-breakpoint {
            //for tablets and smaller, to keep footer from vanishing
            height: 100%;
        }
    }

    .formBuilderContainerContent {
        //By giving it a border the same size as the focus border and a transparent background,
        //it keeps the container from 'jumping' on focus
        border: $stroke-width-thin solid transparent;
        height: calc(100% - #{$trowser-footer-height});
        @include medium-breakpoint {
            //for tablets and smaller, to keep footer from vanishing
            height: 100%;
        }
        min-width: 100%;
        overflow-y: scroll; /* has to be scroll, not auto */
        -webkit-overflow-scrolling: touch; /* This allows for momentum scrolling on touch devices */
        &:focus {
            outline: none;
            border: $stroke-width-thin solid $input-text-focus-border-color;
        }
    }

    .formBuilderContent {
        flex: 1 auto;
        max-height: 100%;
        @include medium-breakpoint {
            //improves scrolling on tablet, but keeps duplicate scroll bars from appearing on desktop
            overflow-y: scroll; /* has to be scroll, not auto */
            -webkit-overflow-scrolling: touch; /* This allows for momentum scrolling on touch devices */
        }

    }

    .formContainer {
        padding-bottom: 90px;
    }

    .qbPanel .qbPanelHeader .qbPanelHeaderTitle .qbPanelHeaderTitleText {
        //Set's a width to keep long form titles from breaking the div
        max-width: 500px;
    }

    @include small-breakpoint {
        display: flex;
        flex-direction: column;
        opacity: 1;
        .qbPanel .qbPanelHeader .qbPanelHeaderTitle .qbPanelHeaderTitleText {
            //Set's a width to keep long form titles from breaking the div
            max-width: 250px;
        }
    }

    .formBuilderContainer {
        // When using the touch-backend, the user-select: none property turns off text selection while dragging.
        // Our auto-prefixer doesn't appear to support this one so added prefixes for user-select manually.
        -moz-user-select: -moz-none;
        -ms-user-select: none;
        -webkit-user-select: none;
        user-select: none;

        // For the purpose of current form builder, we lock the height of the textarea so that the height can
        // be used in determining the height of the field editing tools
        // !important is needed because this value is set as an inline style in the multilineTextFieldValueEditor
        textarea {
            height: 150px !important;
        }

        .dragAndDropElement {
            max-width: $form-edit-input-width;

            @include small-breakpoint {
                max-width: inherit;
            }
        }

        .droppableField {
            @include small-breakpoint {
                //This is set for mobile, this way the select box and bottom border
                //will stretch across the whole screen
                margin-right: -15px;
                margin-left: -25px;
            }
        }

        .draggableField {
            opacity: 1;
            z-index: 1;
            transition: opacity 0.5s;

            .draggableFieldWrapper {
                width: 310px;
                height: 100%;

                @include small-breakpoint {
                    width: 100%;
                }

                .formElement .fieldLabel {
                    padding-top: 7px;
                    padding-left: 12px;
                }

                .cellWrapper {
                    padding-left: 12px;
                }
                &:active {
                    .formElement .fieldLabel {
                        opacity: 0;
                    }
                    .cellWrapper {
                        opacity: 0;
                    }
                }
            }
        }

        .draggableField, .droppableField {
            position: relative;
        }

        .dragging {
            max-height: 170px;
            opacity: 0.9;
            transition: opacity 0.5s;
            .cellWrapper {
                opacity: 0;
            }
            .field {
                opacity: 0;
            }
        }

        /**
         *  The element cache is always hidden. It contains copies of elements that are being dragged to support
         *  an issue with touch events. See formBuilder.js for more information.
         */
        .elementCache {
            display: none;
        }

        .field {
            padding-bottom: 12px;
        }
    }
}
