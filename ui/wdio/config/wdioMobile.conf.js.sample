// wdioMobile.conf.js
// Use this config file to run wdio tests against mobile devices (phones and tablets) via a local Appium server

// Global variable that allows you to set wdio to use a realm defined in your node config file
// (see onPrepare hook below)
var localConf;
// Import the base wdio conf to override
var baseConf = require('./wdio.conf');
// Variable for the test directory structure
var baseTestDir = './ui/wdio/tests';
// Directory containing tests for medium, large, xlarge breakpoints
var smallBpTestDir = baseTestDir + '/smallBP';

// Define specific overrides
var config = {
    // Set to true if this config file uses the Appium service (mobile device emulator testing)
    useAppium : true,

    // Test files to run
    specs: [
        baseTestDir + '/**/*.spec.js'
    ],

    // Patterns to exclude.
    exclude: [
        // Exclude these tests for tablet
        baseTestDir + '/reports/reportDeleteRecord.e2e.spec.js',
        //TODO: in-line edit there is no functionality for touch devices at least for now
        baseTestDir + '/reports/reportEditRecord.e2e.spec.js',
        //TODO: sortingGrouping tests fail due to MC-2463(column header dropdown flashes only on medium BP)
        baseTestDir + '/reports/grouping/reportGroupingViaColumnHeader.e2e.spec.js',
        baseTestDir + '/reports/sorting/reportSortingViaColumnHeader.e2e.spec.js'
    ],

    // Tests organized into suites (add --suite reports,forms,tables to your IntelliJ config to use).
    suites: {
        // Please alphabetize these by folder level
        formsSmallBP: [
            smallBpTestDir + '/forms/formAdd.e2e.spec.js'
        ],
        globalSmallBP: [
            smallBpTestDir + '/global/globalTopNav.e2e.spec.js',
            smallBpTestDir + '/global/globalLeftNav.e2e.spec.js'
        ],
        relationshipsSmallBP: [
            smallBpTestDir + '/relationships/relationshipNavToParent.small.e2e.spec.js'
        ],
        reportsSmallBP: [
            smallBpTestDir + '/reports/reportTable.e2e.spec.js',
            smallBpTestDir + '/reports/reportSortingViaContainer.e2e.spec.js'
        ]
    },

    // If you have trouble getting all important capabilities together, check out the
    // Sauce Labs platform configurator - a great tool to configure your capabilities:
    // https://docs.saucelabs.com/reference/platforms-configurator
    //
    capabilities: [
        {
            maxInstances: 1,
            platformName: 'iOS',
            browserName: 'safari',
            deviceName: 'iPhone 6s'
        },
        //{
        //    maxInstances: 1,
        //    platformName: 'iOS',
        //    browserName: 'safari',
        //    deviceName: 'iPad 2',
        //    deviceOrientation: 'landscape'
        //}
    ],

    // Define all options that are relevant for connecting to your appium server
    host: 'localhost',
    port: 4723,

    // Test runner services
    // Services take over a specific job you don't want to take care of. They enhance
    // your test setup with almost no effort. Unlike plugins, they don't add new
    // commands. Instead, they hook themselves up into the test process.
    services: ['appium', 'selenium-standalone', 'firefox-profile'],
};
var exportConfig = Object.assign(baseConf.config, config);
exports.config = exportConfig;
