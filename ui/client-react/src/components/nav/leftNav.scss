@import '../../assets/css/qbVariables';

/*
 * Mixin to create the separator line to the left of the report icon on each table in the nav.
 * This may be cleaned up/removed when this file gets refactored. We really shouldn't need to use so many of these.
 */
@mixin leftNavReportIconSeparator() {
    &::after {
        content: '';
        position: absolute;
        border-left: 1px solid $leftnav-brandarea-stroke-color;
        left: 0;
        height: 24px;
        top: 9px;
    }
}

.leftNav.expanded {
    overflow: visible;
}

.leftNav {
    a, a:hover, a:focus {
        text-decoration: none;
    }

    .leftNavLabel {
        vertical-align: middle;
    }

    .loadedContent {
        width: 100%;
    }
}

.leftNav a.leftNavLink {
    width: 100%;
    cursor: pointer;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

.leftNav .link {
    height: 40px;

    a.leftNavLink {
        padding-right: 34px;
    }
}

.leftNav .link.selected {
    a.leftNavLink {
        color: $leftnav-table-selected-color;
    }

    &::before {
        content: '';
        position: absolute;
        width: 4px;
        height: 30px;
        left: 0;
        top: 6px;
        border-left: 4px solid $leftnav-table-selected-color;
    }

    a.right {
        opacity: 1;
        color: $leftnav-table-selected-color;

        @include leftNavReportIconSeparator();
    }
}

.leftNav .globalActions {
    display: none;
}

@include medium-breakpoint {
    .leftNav.expanded {
        width: $leftNav-width-medium-breakpoint;
        transition: width 100ms ease;
    }
}

@include large-breakpoint {
    .leftNav.expanded {
        width: $leftNav-width-large-breakpoint;
        transition: width 100ms ease;
    }
}

@include xlarge-breakpoint {
    .leftNav.expanded {
        width: $leftNav-width-xLarge-breakpoint;
        transition: width 100ms ease;
    }
}

@include small-breakpoint {
    .leftNav .globalActions {
        display: block;
        .globalAction .disabled {
            padding-right: 0;
            padding-top: 4px;
            padding-left: 18px;
            border: none;
            width: 0;
            background: $leftnav-background-color;

            &:hover {
                background: $leftnav-background-color;

            }
        }
    }

    .leftNav.open {
        width: calc(100% - 36px);
        transition: all 100ms ease;

        .topLinks .leftNavLink {
            padding: 10px 0;

            .qbIcon {
                display: inline-block;
                width: auto;
                padding-right: 4px;
            }
        }
    }
}

/* show tooltips only if .show is present unless we're on a touchscreen */
div.leftNavTooltip {
    display: none;
}

@include not-small-breakpoint {
    div.leftNavTooltip.show {
        display: block;
    }
}



/* collapsed nav overrides */

@include not-small-breakpoint {
    .leftNav.collapsed {
        width: 40px;
        transition: width 100ms ease;

        .appsToggleArea {
            .appsToggle .navLabel, .appsToggleIcon {
                display: none;
            }
        }

        .appsToggleArea button.appsToggle {
            padding: 0 10px;
            flex-direction: row;

            .qbIcon {
                font-size: 20px;
                width: 20px;
            }
        }

        .branding {
            display: none;
        }

        li.horizontal, .globalActions {
            ul {
                li {
                    border-right: 0;
                }
                flex-direction: column;
            }
        }

        li.link:hover .hoverComponent {
            display: flex;
        }

        .globalActions > ul > li > .globalActionLink {
            .navLabel {
                display: none;
            }
        }

        .globalAction:last-child {
            display: none;
        }

        .heading {
            display: none;
        }

        li.search {
            display: none;
        }

        .leftNavLabel {
            display: none;
        }

        li.horizontal .leftNavLink {
            padding-top: 10px;
        }

        .transitionGroup .tablesHeadingAndList .tablesList {
            overflow: visible;
        }
    }
}

@include small-breakpoint {
    .leftNav.closed {
        overflow: hidden;
    }
}

.leftNav {
    background-color: $leftnav-background-color;
    display: flex;
    flex-direction: column;
    flex: 0 0 auto;
    color: $color-black-700;
    position: relative;
    border-right: 1px solid $leftnav-background-stroke-color;

    .qbIcon {
        font-size: 18px;
    }

    .appsToggleArea {
        position: relative;
        flex: 0 0 auto;
        min-height: 40px;
        background-color: $leftnav-app-background-color;

        .toggleNavButton {
            display: none;
            position: absolute;
            right: 10px;
            top: 11px;
            color: $left-nav-heading-color;

            .qbIcon {
                font-size: 16px;
            }
        }

        button.appsToggle {
            overflow: hidden;
            padding: 10px 28px;
            color: $leftnav-app-icon-color;
            min-height: 40px;
            border: 0;
            border-radius: 0;
            margin: 0;
            width: 100%;
            position: relative;
            white-space: nowrap;
            cursor: pointer;
            background-color: transparent;
            display: block;
            align-items: center;
            font-size: 20px;

            .qbIcon {
                font-size: 40px;
                width: 40px;
            }

            .navLabel {
                margin-top: 10px;
                display: block;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            .iconUISturdy-caret-up {
                position: absolute;
                right: 10px;
                width: auto;
                bottom: 16px;
                font-size: 14px;
                transition: transform 300ms ease-in;
                transform: rotate(-180deg);
            }
        }
    }

    .globalActions {
        flex: 0 1 auto;
        bottom: 0;

        .globalActionLink, .dropup {
            width: 100%;
            line-height: 25px;
        }
    }

    .branding {
        background-color: $leftnav-brandarea-background-color;
        border-top: 1px solid $leftnav-brandarea-stroke-color;
        padding: 10px;
        text-align: center;
    }

    .search {
        color: $search-input-color;
        overflow: hidden;
        height: 0;
        visibility: hidden;
        transition: all 250ms ease;
    }

    .search.open {
        visibility: visible;
        padding: 0 8px;
        height: 42px;
        transition: all 250ms ease;
    }

    .heading {
        font-size: 12px;
        color: $ghost-text-color;
        margin: 0;
        padding-left: 10px;
        line-height: 40px;
        font-style: oblique;

        &.withSecondary {
            cursor: pointer;

            .qbIcon {
                font-size: 16px;
                position: absolute;
                right: 8px;
                width: auto;
                top: 10px;
            }
        }
    }

    .transitionGroup {
        flex: 1 1 auto;
        overflow: visible;
        z-index: 1;
        display: flex;

        .appsList {
            width: 100%;
        }

        .tablesHeadingAndList {
            flex: 1 1 auto;
            width: 100%;
            display: flex;
            flex-direction: column;

            .tablesHeading {
                width: 100%;
                flex: 0 0 auto;
            }

            .tablesList {
                flex: 1 1 auto;
                width: 100%;
                overflow: auto;
            }
        }
    }
    /* This is so when you hover over the item, the entire contents shows like a tooltip... but we then cannot scroll when collapsed. Temporary fix */
    &.expanded {
        .transitionGroup {
            overflow: auto;
        }
    }

    ul {
        list-style: none;
        list-style-type: none;
        list-style-position: initial;
        list-style-image: initial;
    }

    ul.globalActionsList > li {
        height: auto;
    }

    ul.topLinks, ul.tablesHeading, ul.tablesList, ul.appsList, ul.globalActionsList {
        padding: 0;
        margin: 0;

        > li {
            position: relative;

            a.leftNavLink, a.right, .hoverComponent > a, .globalActionLink {
                line-height: 40px;
                padding-left: 10px;
                color: $leftnav-tablenames-color;
                display: inline-block;
                cursor: pointer;
            }

            .globalActionLink .dropdownToggle {
                color: $leftnav-tablenames-color;
            }

            .qbIcon {
                width: 28px;
                vertical-align: middle;
            }
        }

        > li.link:hover {
            background-color: $leftnav-table-selected-color;

            > a, .dropdownToggle {
                color: $left-nav-link-hover-color;
            }

            > a.right, a.right:focus {
                opacity: 1;
                transition: opacity 0.2s ease-in-out;
                -webkit-transition: opacity 0.2s ease-in-out;
                -moz-transition: opacity 0.2s ease-in-out;
                border-bottom: 0;
                // border-left: 1px solid $left-nav-right-icon-separator-color;

                @include leftNavReportIconSeparator();

            }
        }
    }

    ul.tablesList, ul.tablesHeading {
        li {
            a.right {
                opacity: 0;
                position: absolute;
                right: 0;

                &:focus {
                    opacity: 1;
                }
            }

            .hoverComponent {
                display: none;
                position: absolute;
                top: 0;
                left: 100%;
                vertical-align: middle;
                line-height: 40px;
                width: 200px;
                background-color: $leftnav-table-selected-color;

                a {
                    flex: 1;
                    opacity: 1;
                    color: $left-nav-color;
                }

                a.right {
                    flex: 0 0 auto;
                    color: $left-nav-color;

                    @include leftNavReportIconSeparator();
                }
            }

            &.selected .hoverComponent {
                background-color: $leftnav-table-selected-color;
            }
        }
    }

    .loader {
        position: absolute;
        right: 20px;
        top: 20px;
    }
}

.leftNav.expanded li.horizontal ul li {
    height: auto;
}

.leftNav li.horizontal {
    border-top: 1px solid $leftnav-background-color;
    border-bottom: 1px solid $leftnav-background-stroke-color;

    &:hover {
        border-top-color: $color-cyan-300;
    }
}

.leftNav li.horizontal, .leftNav .globalActions {
    height: auto;

    > ul {
        display: flex;
        flex-direction: row;

        > li {
            flex: 1 0 auto;
            border-right: 1px solid $leftnav-background-stroke-color;
            &:last-of-type {
                border-right: none;
            }

            > a.leftNavLink, .globalActionLink {
                padding: 7px 0 0 0;
                text-align: center;
                line-height: 20px;
                border-radius: 0;
                border: 0;
                background-color: inherit;

                .qbIcon, .navLabel, .dropup {
                    display: block;
                    width: 100%;
                }
            }

            &.selected::before {
                border-left: none;
                border-bottom: 3px solid $leftnav-table-selected-color;
                top: auto;
                left: auto;
                bottom: 0;
                width: 100%;
                height: 3px;
            }
        }
    }
}

.leftNav .globalActions {
    border-top: 1px solid $leftnav-background-stroke-color;
}

/* left nav behaves differently on small breakpoint */

.touch .leftNav {
    /* always show right link on touch */
    ul li.link a.right {
        opacity: 1;
        border: 0;

        .qbIcon {
            width: 32px;
            padding-left: 2px;
        }
    }

    ul li.link.selected a.right .qbIcon {
        border-left: 0;
    }
}

@include small-breakpoint {
    .leftNav {
        margin: 0;
        height: 100%;
        width: 0;
        transition: width 100ms ease;
        z-index: 9999;

        .appsToggleArea {
            .toggleNavButton {
                display: block;
            }
        }
    }

    .navShell.leftNavOpen {
        position: relative;
        left: -300px;

        .topNav.mobile {
            min-width: 640px;
        }

        .main {
            position: absolute;
            left: calc(100% - 36px);
        }
        transform: translate3d(300px, 0, 0);
        -webkit-transform: translate3d(300px, 0, 0);
    }
}

/** REACTCSSTRANSITION BASE CLASSES **/

.leftNavList-enter {
    opacity: 0.01;
}

.leftNavList.leftNavList-enter-active {
    opacity: 1;
    transition: opacity 300ms ease-in;
}

.leftNavList-leave {
    opacity: 1;
}

.leftNavList-leave.leftNavList-leave-active {
    opacity: 0.01;
    transition: opacity 300ms ease-in;
}
$transition-time: 300ms;
$travel-distance: 15;

.leftNavList-enter.appsList li {
    margin-top: -#{$travel-distance}px;
}

.leftNavList-enter-active.appsList li {
    margin-top: 0;
    transition: all $transition-time ease-in;
}

.leftNavList-enter.tablesList li, .leftNavList-enter.tablesHeadomg li {
    margin-top: #{$travel-distance}px;
}

.leftNavList-enter-active.tablesList li, .leftNavList-enter-active.tablesHeading li {
    margin-top: 0;
    transition: all $transition-time ease-in;
}

.leftNav.appsListOpen .appsToggleArea .qbIcon.iconUISturdy-caret-up {
    transform: rotate(0deg);
}

.leftNav .loader {
    margin-left: auto;
    margin-right: auto;
    margin-top: 50px;
    position: relative;

    .spinner {
        // Requires important flags because the react-loader puts styles inline on the elements
        position: relative !important;
        top: auto !important;
        left: auto !important;
    }
}
