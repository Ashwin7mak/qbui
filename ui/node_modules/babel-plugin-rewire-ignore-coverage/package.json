{
  "name": "babel-plugin-rewire-ignore-coverage",
  "version": "1.0.0",
  "description": "disable instanbul coverage on rewire injection by adding comments",
  "repository": {
    "type": "git",
    "url": "babel-plugin-rewire-ignore-coverage"
  },
  "license": "MIT",
  "main": "index.js",
  "devDependencies": {
    "babel": "^5.6.0"
  },
  "keywords": [
    "babel-plugin"
  ],
  "readme": "# babel-plugin-review-no-cover\n\nThis plugin disable rewire injected methods from istanbul coverage counts.\n\nWe get ES6/7 syntax and JSX transpiling out of the box with babel-loader (webpack module). The rewire plugin to babel is used to mock out other components when unit testing a component. The rewiring injects some code (setters/getters/resetters) when the system under test accesses the other dependent mocked components. The coverage sweep reported those injected methods as not covered by tests. This new babel-plugin-rewire-ignore-coverage plugin marks those injected code functions to be ignored by istanbul, after the rewiring\n\n\n\n## Example\n\n**In**\n\n```javascript\n \nfunction __GetDependency__(name) {\n    return __$Getters__[name]();\n}\n \n \nfunction __Rewire__(name, value) {\n    __$Setters__[name](value);\n}\n \n \nfunction __ResetDependency__(name) {\n    __$Resetters__[name]();\n}\n \n__$Getters__['React'] = function () {\n    return React;\n};\n \n__$Setters__['React'] = function (value) {\n    React = value;\n};\n \n__$Resetters__['React'] = function () {\n    React = _react2['default'];\n}; \n\n```\n\n**Out**\n\n```javascript\n// istanbul ignore next\n \nfunction __GetDependency__(name) {\n    return __$Getters__[name]();\n}\n \n// istanbul ignore next\n \nfunction __Rewire__(name, value) {\n    __$Setters__[name](value);\n}\n \n// istanbul ignore next\n \nfunction __ResetDependency__(name) {\n    __$Resetters__[name]();\n}\n \n__$Getters__['React'] = // istanbul ignore next \nfunction () {\n    return React;\n};\n \n\n__$Setters__['React'] = // istanbul ignore next \nfunction (value) {\n    React = value;\n};\n \n__$Resetters__['React'] = // istanbul ignore next \nfunction () {\n    React = _react2['default'];\n}; \n```\n\n## Installation\n\n```sh\n$ npm install babel-plugin-rewire-ignore-coverage\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"rewire\", \"rewire-ignore-coverage\"]\n}\n```\n\n### Via CLI\n\n```sh\n$ babel --plugins rewire-ignore-coverage  script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"rewire-ignore-coverage\"]\n});\n```\n\n\n### Via Karma config\n```\n       webpack: {\n            devtool: \"source-map\",\n            module: {\n                loaders: [\n                    {\n                        // all js src and test files get treated by babel\n                        test: /\\.js?$/,\n                        include: [\n                            path.resolve(__dirname, \"client/src\"),\n                            path.resolve(__dirname, \"client/test\")\n                        ],\n                        exclude: [nodeModulesPath],\n                        loader: \"babel-loader\",\n                        query: {\n                            plugins: ['babel-plugin-rewire', \n                                      'babel-plugin-rewire-ignore-coverage']\n                        }\n                    },\n                    \n```",
  "readmeFilename": "README.md",
  "_id": "babel-plugin-rewire-ignore-coverage@1.0.0",
  "scripts": {},
  "_shasum": "507e5a9c4a32aba5c337718e327a719c4ce07871",
  "_from": "plugins/babel-plugin-rewire-ignore-coverage",
  "_resolved": "file:plugins/babel-plugin-rewire-ignore-coverage"
}
