version: 0.2
env:
 variables:
  NODE_ENV: container
phases:
  install:
    commands:
      # TODO: All of this should be moved to a custom container
      - echo "dash dash/sh boolean false" | debconf-set-selections # Set default shell to bash (Step 1)
      - DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash       # Set default shell to bash (Step 2)
      - chmod -R +x . # Workaround Codebuild issue where executable bits are not preserved on github clones
      - apt-get -qqy update # Update list of available software (required for the next step)
      - apt-get -qqy install software-properties-common # Needed for the add-apt-repository command in the next step
      - add-apt-repository -y ppa:openjdk-r/ppa # Add JDK repo
      - apt-get -qqy update # Update list of available software (due to the previous step)
      - apt-get -qqy install openjdk-8-jdk jq build-essential libssl-dev # JDK for gradle; not sure about the other deps
      - curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
      - export NVM_DIR="$HOME/.nvm"
      - source "$NVM_DIR/nvm.sh" && nvm install v6.9.5 # Must be on same line while inside a CodeBuild environment
      - npm install -g grunt
      - npm install -g grunt-cli
      - curl -L "https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose
  pre_build:
    commands:
      - $(aws ecr get-login --registry-ids ${REGISTRYID})
      - bin/opensg.sh "${NEXUS_SG}"
  build:
    commands:
      - ./gradlew -p ui npmPrune npmInstallLean clean npmRunLint npmListConfig test build -Pdocker
      - docker build -t "${REPOSITORY_URI}:${CODEBUILD_RESOLVED_SOURCE_VERSION}" -t "${REPOSITORY_URI}:latest" .
      - docker push "${REPOSITORY_URI}:${CODEBUILD_RESOLVED_SOURCE_VERSION}"
      - test "${BRANCH}" = "master" && docker push "${REPOSITORY_URI}:latest" || true
      - printf '{"image":"%s"}' "${REPOSITORY_URI}:${CODEBUILD_RESOLVED_SOURCE_VERSION}" > build.json
  post_build:
    commands:
      - bin/closesg.sh "${NEXUS_SG}"
artifacts:
  files:
    - build.json
