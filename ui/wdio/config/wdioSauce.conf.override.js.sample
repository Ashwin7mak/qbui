// wdioSauce.conf.js
// This config file is used to run wdio tests out on Sauce Labs (used in our CI wdio try and master builds)

// Global variable that allows you to set wdio to use a realm defined in your node config file
// (see onPrepare hook below)
var randomNum = Math.floor((Math.random() * (100 - 1) + 1));
var seleniumPort = 4400 + randomNum;
var baseTestDir = './ui/wdio/tests';

var config = require(`./wdioSauce${process.env.BROWSER}.conf`);

var overrides = {
    host: '127.0.0.1',
    port: seleniumPort,
    //path: '/wd/hub',
    //
    // ============
    // Debug config
    // ============
    // Change this option to true if you want to run tests in debug mode either using IntelliJ breakpoints
    // or WebdriverIO's browser.debug() command within your spec files
    // See http://webdriver.io/guide/testrunner/debugging.html for more info.
    //
    debug: true,
    //
    // ==================
    // Specify Test Files
    // ==================
    // Define which test specs should run. The pattern is relative to the directory
    // from which `wdio` was called. Notice that, if you are calling `wdio` from an
    // NPM script (see https://docs.npmjs.com/cli/run-script) then the current working
    // directory is where your package.json resides, so `wdio` will be called from there.
    //
    specs: [
        // specs to run are overwritten by the wdio grunt plugin. See Gruntfile.js 'webdriver' task
        baseTestDir + '/forms/formAdd.e2e.spec.js',
    ],
    // Patterns to exclude.
    exclude: [
        // 'path/to/excluded/files'
    ],

    maxInstances: 10,

    capabilities: [Object.assign({}, config.config.capabilities[0], {name: process.env.SAUCE_JOB_NAME})]
};

exports.config = Object.assign({}, config.config, overrides);
